var __defProp = Object.defineProperty;
var __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
var __publicField = (obj, key, value) => {
  __defNormalProp(obj, typeof key !== "symbol" ? key + "" : key, value);
  return value;
};
class Bus {
  constructor() {
    // 事件池
    __publicField(this, "pools", {});
  }
  // 移除事件监听
  remove(race, name, func) {
    const targetRace = this.pools[race];
    const events = targetRace && this.pools[race][name];
    if (events) {
      this.pools[race][name] = events.filter((item) => item !== func);
    }
  }
  // 清空全部事件，由于单一实例，多次注册会被共享内容
  clear(race) {
    this.pools[race] = {};
  }
  // 注册事件监听
  on(race, event) {
    if (!this.pools[race]) {
      this.pools[race] = {};
    }
    if (!this.pools[race][event.name]) {
      this.pools[race][event.name] = [];
    }
    this.pools[race][event.name].push(event.callback);
    return this.pools[race][event.name].includes(event.callback);
  }
  // 触发事件
  emit(race, name, ...params) {
    if (!this.pools[race]) {
      this.pools[race] = {};
    }
    const targetRace = this.pools[race];
    const events = targetRace[name];
    if (events) {
      events.forEach((item) => {
        try {
          item(...params);
        } catch (error) {
          console.error(`${name} monitor event exception！`, error);
        }
      });
    }
  }
}
const bus = new Bus();
const ON_SAVE = "onSave";
const CHANGE_CATALOG_VISIBLE = "changeCatalogVisible";
const CHANGE_FULL_SCREEN = "changeFullscreen";
const PAGE_FULL_SCREEN_CHANGED = "pageFullscreenChanged";
const FULL_SCREEN_CHANGED = "fullscreenChanged";
const PREVIEW_CHANGED = "previewChanged";
const PREVIEW_ONLY_CHANGED = "previewOnlyChanged";
const HTML_PREVIEW_CHANGED = "htmlPreviewChanged";
const CATALOG_VISIBLE_CHANGED = "catalogVisibleChanged";
const BUILD_FINISHED = "buildFinished";
const ERROR_CATCHER = "errorCatcher";
const REPLACE = "replace";
const UPLOAD_IMAGE = "uploadImage";
const OPEN_MODALS = "openModals";
const CTRL_Z = "ctrlZ";
const CTRL_SHIFT_Z = "ctrlShiftZ";
const CATALOG_CHANGED = "catalogChanged";
const PUSH_CATALOG = "pushCatalog";
const RERENDER = "rerender";
const EVENT_LISTENER = "eventListener";
const base642File = (base64, fileName = "image.png") => {
  const arr = base64.split(",");
  const regResult = arr[0].match(/:(.*?);/);
  if (regResult) {
    const mime = regResult[1];
    const bstr = atob(arr[1]);
    let n = bstr.length;
    const u8arr = new Uint8Array(n);
    while (n--) {
      u8arr[n] = bstr.charCodeAt(n);
    }
    return new File([u8arr], fileName, { type: mime });
  }
  return null;
};
const generateCodeRowNumber = (code) => {
  if (!code) {
    return code;
  }
  const list = code.split("\n");
  const rowNumberList = ['<span rn-wrapper aria-hidden="true">'];
  list.forEach(() => {
    rowNumberList.push("<span></span>");
  });
  rowNumberList.push("</span>");
  return `<span class="code-block">${code}</span>${rowNumberList.join("")}`;
};
const getRelativeTop = (element, container) => {
  if (!element || !container) {
    return 0;
  }
  const eleRect = element == null ? void 0 : element.getBoundingClientRect();
  if (container === document.documentElement) {
    return eleRect.top - container.clientTop;
  }
  const conRect = container == null ? void 0 : container.getBoundingClientRect();
  return eleRect.top - conRect.top;
};
const getNextId = /* @__PURE__ */ (() => {
  let count = 0;
  return (prefix) => {
    return prefix + ++count;
  };
})();
export {
  BUILD_FINISHED as B,
  CATALOG_CHANGED as C,
  ERROR_CATCHER as E,
  FULL_SCREEN_CHANGED as F,
  HTML_PREVIEW_CHANGED as H,
  ON_SAVE as O,
  PUSH_CATALOG as P,
  RERENDER as R,
  UPLOAD_IMAGE as U,
  generateCodeRowNumber as a,
  bus as b,
  CHANGE_CATALOG_VISIBLE as c,
  PAGE_FULL_SCREEN_CHANGED as d,
  PREVIEW_CHANGED as e,
  PREVIEW_ONLY_CHANGED as f,
  getRelativeTop as g,
  CATALOG_VISIBLE_CHANGED as h,
  REPLACE as i,
  CHANGE_FULL_SCREEN as j,
  EVENT_LISTENER as k,
  getNextId as l,
  base642File as m,
  OPEN_MODALS as n,
  CTRL_SHIFT_Z as o,
  CTRL_Z as p
};
